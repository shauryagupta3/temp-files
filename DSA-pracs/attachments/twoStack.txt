#include <iostream>

using namespace std;

class twoStacks {
private:
    int* arr;
    int size;
    int top1, top2;

public:
    twoStacks(int n) {
        size = n;
        arr = new int[n];
        top1 = -1;
        top2 = size;
    }

    void push1(int x) {
        if (top1 < top2 - 1) {
            arr[++top1] = x;
        } else {
            cout << "Stack 1 is full." << endl;
        }
    }

    void push2(int x) {
        if (top1 < top2 - 1) {
            arr[--top2] = x;
        } else {
            cout << "Stack 2 is full." << endl;
        }
    }

    int pop1() {
        if (top1 >= 0) {
            return arr[top1--];
        } else {
            cout << "Stack 1 is empty." << endl;
            return -1;
        }
    }

    int pop2() {
        if (top2 < size) {
            return arr[top2++];
        } else {
            cout << "Stack 2 is empty." << endl;
            return -1;
        }
    }

    void display1() {
        for (int i = 0; i <= top1; i++) {
            cout << arr[i] << " ";
        }
        cout << endl;
    }

    void display2() {
        for (int i = size - 1; i >= top2; i--) {
            cout << arr[i] << " ";
        }
        cout << endl;
    }
};

int main() {
    int n = 10;
    twoStacks twoStackObj(n);

    twoStackObj.push1(5);
    twoStackObj.push1(9);
    twoStackObj.push1(1);
    twoStackObj.push2(2);
    twoStackObj.push2(7);
    twoStackObj.push2(4);

    cout << endl << "Stack1 : ";
    twoStackObj.display1();
    cout << endl << "Stack2 : ";
    twoStackObj.display2();

    cout << "\nPopped from Stack 1: " << twoStackObj.pop1() << endl;
    cout << "Popped from Stack 2: " << twoStackObj.pop2() << endl;

    return 0;
}
